effective_travel_time = {
	value = var:travel_time
}

per_capita_wealth = {
	value = var:province_wealth
	divide = total_population
}

per_capita_infrastructure = {
	value = var:province_infrastructure
	divide = total_population
}

wealth_factor = {
	value = 0.1
	multiply = per_capita_infrastructure
	if = {
		limit = {per_capita_infrastructure < 10}
	}
	else_if = {
		limit = {per_capita_infrastructure < 30}
		divide = 2.0
		add = 0.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 60}
		divide = 3.0
		add = 1
	}
	else_if = {
		limit = {per_capita_infrastructure < 100}
		divide = 4.0
		add = 1.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 150}
		divide = 5.0
		add = 2
	}
	else_if = {
		limit = {per_capita_infrastructure < 210}
		divide = 6.0
		add = 2.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 280}
		divide = 7.0
		add = 3
	}
	else_if = {
		limit = {per_capita_infrastructure < 360}
		divide = 8.0
		add = 3.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 450}
		divide = 9.0
		add = 4
	}
	else_if = {
		limit = {per_capita_infrastructure < 550}
		divide = 10.0
		add = 4.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 660}
		divide = 11.0
		add = 5
	}
	else_if = {
		limit = {per_capita_infrastructure < 780}
		divide = 12.0
		add = 5.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 910}
		divide = 13.0
		add = 6.0
	}
	else_if = {
		limit = {per_capita_infrastructure < 1050}
		divide = 14.0
		add = 6.5
	}
	else_if = {
		limit = {per_capita_infrastructure < 1200}
		divide = 15.0
		add = 7.0
	}
	else = {
		multiply = 0
		add = 15
	}
	multiply = 0.25
	add = 0.25
}

additional_travel_time_sval = {
	value = 0
	if = {
		limit = {
			OR = {
				terrain = plains
				terrain = farmland
			}
		}
		add = 1.5
	}
	else_if = {
		limit = {
			OR = {
				terrain = hills
				terrain = forest
				terrain = desert
			}
		}
		add = 3
	}
	else_if = {
		limit = {
			OR = {
				terrain = mountain
				terrain = marsh
				terrain = jungle
			}
		}
		add = 7.5
	}
	else = {
		add = 10
	}
	if = {
		limit = { has_road_towards = prev }
		multiply = 0.5
	}
}

migration_attraction = {
	value = 0
	if = {
		limit = { has_province_rank = settlement }
		add = marginal_food_production
		subtract = high_pop_food_production
		multiply = 100
		add = {
			value = total_population
			divide = 2
		}
	}
	else = {
		add = {
			value = urban_wealth_change
			divide = total_population
			multiply = 100
		}
	}
}

high_pop_food_production = {
	value = 0.2
	multiply = crop_yield_modifier
}

low_pop_food_production = {
	if = {
		limit = { terrain = farmland }
		value = 0.4
	}
	else_if = {
		limit = { terrain = plains }
		value = 0.35
	}
	else_if = {
		limit = { terrain = mountain }
		value = 0.25
	}
	else_if = {
		limit = { terrain = hills }
		value = 0.3
	}
	else_if = {
		limit = { AND = {terrain = desert has_minor_river = no is_adjacent_to_major_river = no} }
		value = 0.25
	}
	else_if = {
		limit = { terrain = desert}
		value = 0.3
	}
	else_if = {
		limit = { terrain = marsh}
		value = 0.25
	}
	else_if = {
		limit = { terrain = jungle}
		value = 0.25
	}
	else_if = {
		limit = { terrain = forest}
		value = 0.3
	}
	else = {
		value = 0.2
	}
	if = {
		limit = {
			has_minor_river = yes
		}
		add = 0.05
	}
	if = {
		limit = {
			is_adjacent_to_major_river = yes
		}
		add = 0.05
	}
	if = {
		limit = {
			is_coastal = yes
		}
		add = 0.05
	}
	if = {
		limit = {
			has_variable = fertile_flag
		}
		add = 0.1
	}
	subtract = high_pop_food_production
	multiply = wealth_factor
	multiply = crop_yield_modifier
	add = high_pop_food_production
}

crop_yield_modifier = {
	value = 1
	if = {
		limit = {has_variable = current_yield_status}
		if = {
			limit = { var:current_yield_status < -2.5 }
			multiply = 0.5001
		}
		else_if = {
			limit = { var:current_yield_status < -1.5 }
			multiply = 0.7501
		}
		else_if = {
			limit = { var:current_yield_status < -0.5 }
			multiply = 0.9001
		}
		else_if = {
			limit = { var:current_yield_status < 0.5 }
			multiply = 1.0001
		}
		else_if = {
			limit = { var:current_yield_status < 1.5 }
			multiply = 1.1001
		}
		else_if = {
			limit = { var:current_yield_status < 2.5 }
			multiply = 1.25001
		}
		else = {
			multiply = 1.5001
		}
	}
}

marginal_food_production = {
	value = farming_population
    multiply = -1
    multiply = {
		value = low_pop_food_production
		subtract = high_pop_food_production
	}
    divide = farming_population_cap
	add = low_pop_food_production
}

carrying_cap_factor = {
	value = root.total_population
	divide = root.population_cap
	if = {
		limit = {has_province_rank = settlement}
		multiply = -1
	}
	else = {
		multiply = -1.3333333
		multiply = {
			value = 1
			subtract = {
				value = root.total_population
				divide = root.population_cap
				subtract = 1
				divide = 2
			}
		}
	}
	add = 1
}

growth_rate = {
	value = root.total_population
	multiply = carrying_cap_factor
	multiply = 0.36
}

annual_growth_rate = {
	value = growth_rate
	divide = root.total_population
	multiply = 100
	divide = 12
}

max_food_producers_city = {
	value = 15
}

farming_population = {
	value = 3
	add = owner.manpower_percentage
	divide = 4
	multiply = {
		value = num_of_freemen
		add = num_of_tribesmen
		add = num_of_citizen
		if = {
			limit = {has_building = rural_industry}
			subtract = 2
		}
		min = 0
	}
	add = {
		value = num_of_slaves
		if = {
			limit = {has_building = slave_mine_building}
			subtract = 2
		}
	}
	
	if = {
		limit = {has_province_rank = city}
		max = max_food_producers_city
	}
	else_if = {
		limit = {has_province_rank = city_metropolis}
		multiply = 0
	}
}

farming_population_cap = {
	value = root.population_cap
	if = {
		limit = {
			state = {
				has_state_food = 0
			}
		}
		multiply = 4
	}
		
	if = {
		limit = { 
			NOT = {has_province_rank = settlement}
		}
		max = max_food_producers_city
	}
}

surplus_produced = {
	value = low_pop_food_production
	add = marginal_food_production
	multiply = 0.5
    multiply = farming_population
}

deity_global_monthly_food_modifier_svalue = 0.001
deity_global_food_capacity_svalue = 15
add_prominent_character_veterans = {
	value = 0
	add = home_country.total_power_base
	multiply = 0.025
	floor = yes
}
remove_prominent_character_veterans = {
	value = 0
	subtract = home_country.total_power_base
	multiply = 0.05
	floor = yes
}

current_office_sval = {
	value = 0
	if = {
		limit = {has_office = office_censor}
		add = 1001
	}
	else_if = {
		limit = {has_office = office_praetor}
		add = 101
	}
	else_if = {
		limit = {has_office = office_tribune_of_the_soldiers}
		add = 1
	}
	else_if = {
		limit = {has_office = office_tribune_of_the_treasury}
		add = 2
	}
	else_if = {
		limit = {has_office = office_augur}
		add = 3
	}
	else_if = {
		limit = {has_office = office_pontifex}
		add = 102
	}
	else_if = {
		limit = {has_office = office_plebeian_aedile}
		add = 103
	}
	else_if = {
		limit = {has_office = office_republic_physician}
		add = 4
	}
	else_if = {
		limit = {has_office = office_foreign_minister}
		add = 104
	}
	else_if = {
		limit = {has_office = office_royal_tutor}
		add = 5
	}
	else_if = {
		limit = {has_office = office_marshal}
		add = 1002
	}
	else_if = {
		limit = {has_office = office_master_of_the_guard}
		add = 1003
	}
	else_if = {
		limit = {has_office = office_high_priest_monarchy}
		add = 105
	}
	else_if = {
		limit = {has_office = office_philosopher}
		add = 6
	}
	else_if = {
		limit = {has_office = office_steward}
		add = 106
	}
	else_if = {
		limit = {has_office = office_physician}
		add = 7
	}
	else_if = {
		limit = {has_office = office_arbitrator}
		add = 107
	}
	else_if = {
		limit = {has_office = office_elder}
		add = 1004
	}
	else_if = {
		limit = {has_office = office_warchief}
		add = 1005
	}
	else_if = {
		limit = {has_office = office_bodyguard}
		add = 1006
	}
	else_if = {
		limit = {has_office = office_high_priest}
		add = 108
	}
	else_if = {
		limit = {has_office = office_wise_person}
		add = 8
	}
	else_if = {
		limit = {has_office = office_magistrate}
		add = 109
	}
	else_if = {
		limit = {has_office = office_apothecary}
		add = 9
	}
}

job_importance_sval = {
	value = 0
	if = {
		limit = {current_office_sval > 1000}
		add = 1
	}
	else_if = {
		limit = {current_office_sval > 100}
		add = 0.5
	}
	else = {
		add = 0.25
	}
}

prominence_factor_sval = {
	value = 0
	if = {
		limit = { prominence < 25}
		add = 15
	}
	else_if = {
		limit = { prominence < 50}
		add = 10
	}
	else = {
		add = 5
	}
}

job_prestige_sval = {
	value = 0
	add = job_importance_sval
	multiply = 100
	if = {
		limit = {is_ruler = yes}
		add = 200
	}
	if = {
		limit = {is_general = yes}
		unit = {
			add = {
				value = unit_size
				multiply = 200
				root.home_country = {
					divide = num_of_cohorts
				}
			}
		}
	}
	if = {
		limit = {is_admiral = yes}
		unit = {
			add = {
				value = unit_size
				multiply = 80
				root.home_country = {
					divide = num_of_ships
				}
			}
		}
	}
	if = {
		limit = {is_governor = yes}
		every_governor_state = {
			every_state_province = {
				add = {
					value = total_population
					multiply = 200
					root.home_country = {
						divide = country_population
					}
					multiply = {
						value = 1
						subtract = {
							value = var:travel_time
							divide = 100
							max = 1
						}
					}
				}
			}
		}
	}
}

gold_from_holding = {
	value = 0
	add = prev.province_tax_income
	multiply = {
		value = 1
		subtract = {
			value = prev.var:travel_time
			divide = 100
		}
	}
	multiply = 12
	min = 0
}

overextension_per_pop_sval = {
	value = 0
	if = {
		limit = {has_law = tax_farmers_all}
		add = 0.1
	}
	else_if = {
		limit = {has_law = tax_farmers_high}
		add = 0.15
	}
	else_if = {
		limit = {has_law = tax_farmers_medium}
		add = 0.2
	}
	else_if = {
		limit = {has_law = tax_farmers_low}
		add = 0.3
	}
	else_if = {
		limit = {has_law = tax_farmers_none}
		add = 0.4
	}
}

overextension_by_state_type = {
	if = {
		limit = {has_law = city_state_law}
		value = 2.0
	}
	else_if = {
		limit = {has_law = league_law}
		value = 1.5
	}
	else_if = {
		limit = {has_law = nation_law}
		value = 1.0
	}
	else_if = {
		limit = {has_law = empire_law}
		value = 0.75
	}
	else = {
		value = 2
	}
}

admin_demand = {
	value = country_population
	multiply = overextension_per_pop_sval
	#multiply = overextension_by_state_type
}

overextension_change = {
	value = admin_demand
	divide = var:admin_capacity
	subtract = 1
	multiply = 100
	subtract = has_aggressive_expansion
	divide = 60
}

net_food_surplus = {
	value = surplus_produced
	subtract = {
		value = 0.2
		multiply = farming_population
	}
}

food_wealth_change = {
	value = net_food_surplus
	multiply = 0.5
}

trade_good_wealth_change = {
	if = {
		limit = {trade_goods = grain}
		value = 0
	}
	else = {
		value = num_goods_produced
	}
	multiply = 0.25
	multiply = wealth_factor
}

urban_wealth_change = {
	if = {
		limit = { has_province_rank = settlement }
		value = 0
	}
	else = {
		value = total_population
	}
	multiply = 0.25 #0.25 per pop per year - growth of 25 gold/pop/century without taxes
	multiply = { #function that is approximately 0.1*per_capita_infrastructure at low per_capita_infrastructure and caps at 10 at high per_capita_infrastructure
		value = 0.02
		multiply = per_capita_infrastructure
		divide = {
			value = per_capita_infrastructure
			divide = 500
			add = 0.2
		}
	}
	divide = 12
}

taxes_change = {
	value = province_wealth_change
	owner = {
		if = {
			limit = {has_law = income_taxes_0}
			multiply = 0
		}
		else_if = {
			limit = {has_law = income_taxes_10}
			multiply = 0.1
		}
		else_if = {
			limit = {has_law = income_taxes_20}
			multiply = 0.2
		}
		else_if = {
			limit = {has_law = income_taxes_30}
			multiply = 0.3
		}
		else_if = {
			limit = {has_law = income_taxes_40}
			multiply = 0.4
		}
		else_if = {
			limit = {has_law = income_taxes_50}
			multiply = 0.5
		}
		else_if = {
			limit = {has_law = income_taxes_60}
			multiply = 0.6
		}
		else = {
			multiply = 0
		}
		min = 0
		add = {
			value = ROOT.var:province_wealth
			if = {
				limit = {has_law = wealth_taxes_0}
				multiply = 0
			}
			else_if = {
				limit = {has_law = wealth_taxes_0_5}
				multiply = 0.005
			}
			else_if = {
				limit = {has_law = wealth_taxes_1}
				multiply = 0.01
			}
			else_if = {
				limit = {has_law = wealth_taxes_1_5}
				multiply = 0.015
			}
			else_if = {
				limit = {has_law = wealth_taxes_2}
				multiply = 0.02
			}
			else_if = {
				limit = {has_law = wealth_taxes_2_5}
				multiply = 0.025
			}
			else_if = {
				limit = {has_law = wealth_taxes_3}
				multiply = 0.03
			}
			else = {
				multiply = 0
			}
			divide = 12
		}
		add = {
			value = ROOT.total_population
			if = {
				limit = {has_law = poll_taxes_0}
				multiply = 0
			}
			else_if = {
				limit = {has_law = poll_taxes_0_05}
				multiply = 0.05
			}
			else_if = {
				limit = {has_law = poll_taxes_0_1}
				multiply = 0.1
			}
			else_if = {
				limit = {has_law = poll_taxes_0_15}
				multiply = 0.15
			}
			else_if = {
				limit = {has_law = poll_taxes_0_2}
				multiply = 0.2
			}
			else_if = {
				limit = {has_law = poll_taxes_0_25}
				multiply = 0.25
			}
			else_if = {
				limit = {has_law = poll_taxes_0_3}
				multiply = 0.3
			}
			else = {
				multiply = 0
			}
			divide = 12
		}
	}
	min = 0
}

tax_efficiency = {
	value = 1
	subtract = {
		value = var:travel_time
		divide = 100
	}
	multiply = {
		if = {
			limit = {owner = {has_law = tax_farmers_none}}
			value = 0.9
		}
		else_if = {
			limit = {owner = {has_law = tax_farmers_low}}
			value = 0.8
		}
		else_if = {
			limit = {owner = {has_law = tax_farmers_medium}}
			value = 0.7
		}
		else_if = {
			limit = {owner = {has_law = tax_farmers_high}}
			value = 0.6
		}
		else_if = {
			limit = {owner = {has_law = tax_farmers_all}}
			value = 0.5
		}
		else = {
			value = 0
		}
	}
	min = 0
}

wealth_decay_change = {
	value = var:province_wealth
	multiply = {
		value = 0
		if = {
			limit = {civilization_value < 10}
			add = -0.08
		}
		else_if = {
			limit = {civilization_value < 20}
			add = -0.05
		}
		else_if = {
			limit = {civilization_value < 30}
			add = -0.03
		}
		else_if = {
			limit = {civilization_value < 35}
			add = -0.02
		}
		else_if = {
			limit = {civilization_value < 40}
			add = -0.01
		}
		else_if = {
			limit = {civilization_value < 45}
			add = -0.008
		}
		else_if = {
			limit = {civilization_value < 50}
			add = -0.005
		}
		else = {
			add = -0.003
		}
		if = {
			limit = {has_variable = disorder}
			add = -0.05
		}
		if = {
			limit = {state = {has_state_food = 0}}
			add = -0.1
		}
	}
	divide = 12
}

infrastructure_decay = {
	value = 0
	if = {
		limit = {civilization_value < 10}
		add = -0.0045
	}
	else_if = {
		limit = {civilization_value < 20}
		add = -0.004
	}
	else_if = {
		limit = {civilization_value < 30}
		add = -0.0035
	}
	else_if = {
		limit = {civilization_value < 35}
		add = -0.003
	}
	else_if = {
		limit = {civilization_value < 40}
		add = -0.0025
	}
	else_if = {
		limit = {civilization_value < 45}
		add = -0.002
	}
	else_if = {
		limit = {civilization_value < 50}
		add = -0.0015
	}
	else = {
		add = -0.001
	}
	divide = 12
}

infrastructure_decay_change = {
	value = var:province_infrastructure
	multiply = infrastructure_decay
}

return_on_infrastructure_time = { #break-even time
	if = {
		limit = {has_province_rank = settlement}
		value = per_capita_infrastructure
		if = {
			limit = {per_capita_infrastructure < 10}
			add = 5
			divide = {
				value = 0.5025
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 5
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 30}
			add = 20
			divide = {
				value = 0.51
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 20
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 60}
			add = 45
			divide = {
				value = 0.5225
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 45
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 100}
			add = 80
			divide = {
				value = 0.54
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 80
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 150}
			add = 125
			divide = {
				value = 0.5625
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 125
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 210}
			add = 180
			divide = {
				value = 0.59
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 180
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 280}
			add = 245
			divide = {
				value = 0.6225
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 245
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 360}
			add = 320
			divide = {
				value = 0.66
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 320
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 450}
			add = 405
			divide = {
				value = 0.7025
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 405
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 550}
			add = 500
			divide = {
				value = 0.75
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 500
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 660}
			add = 605
			divide = {
				value = 0.8025
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 605
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 780}
			add = 720
			divide = {
				value = 0.86
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 720
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 910}
			add = 845
			divide = {
				value = 0.9225
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 845
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 1050}
			add = 980
			divide = {
				value = 0.99
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 980
					multiply = infrastructure_decay
				}
			}
		}
		else_if = {
			limit = {per_capita_infrastructure < 1200}
			add = 1125
			divide = {
				value = 1.0625
				multiply = net_food_surplus
				subtract = {
					value = per_capita_infrastructure
					add = 1125
					multiply = infrastructure_decay
				}
			}
		}
		else = {
			add = 2000
			subtract = per_capita_infrastructure
			divide = {
				multiply = net_food_surplus
				subtract = {
					value = infrastructure_decay
					multiply = 2000
				}
			}
		}
	}
	else = {
		value = 1
		multiply = {
			value = 100
			add = per_capita_infrastructure
		}
		multiply = {
			value = 100
			add = per_capita_infrastructure
		}
		divide = {
			value = 0.0025 
			add = infrastructure_decay
			multiply = per_capita_infrastructure
			multiply = per_capita_infrastructure
			add = {
				value = 10000
				multiply = infrastructure_decay
				add = 250
			}
		}
	}
}

neighbor_change = {
	value = 0
	every_neighbor_province = {
		limit = {
			has_variable = per_capita_wealth
		}
		add = {
			value = var:per_capita_wealth
			subtract = ROOT.var:per_capita_wealth
			multiply = {
				value = total_population
				max = ROOT.total_population
			}
		}
	}
	multiply = 0.20
	divide = 12
}

capital_wealth_extraction = {
	if = {
		limit = {has_variable = taxes_change}
		value = var:taxes_change
	}
	else = {
		value = 0
	}
	multiply = tax_efficiency
	multiply = {
		if = {
			limit = {owner = {has_law = city_state_law}}
			value = 0.5
		}
		else_if = {
			limit = {owner = {has_law = league_law}}
			value = 0.25
		}
		else_if = {
			limit = {owner = {has_law = nation_law}}
			value = 0.1
		}
		else_if = {
			limit = {owner = {has_law = empire_law}}
			value = 0.05
		}
		else = {
			value = 0.25
		}
	}
	min = 0
}

extra_infra_investment = {
	value = var:province_wealth
	if = {
		limit = {var:return_on_infrastructure_time < 0} #income decreases with increasing infrastructure, it's not paying for itself, don't invest in infrastructure
		multiply = -1
	}
	else_if = {
		limit = {var:return_on_infrastructure_time < 600}
		multiply = 0.01
	}
	else = {
		multiply = 0.001
	}
	divide = 12
}

max_infra_investment = {
	value = var:province_wealth
	multiply = 0.25
	divide = 12.0
}

province_infrastrucure_investment = {
	value = infrastructure_decay_change
	multiply = -1
	add = extra_infra_investment
	min = 0
	max = max_infra_investment
}

province_wealth_change = {
	value = 0
	add = food_wealth_change
	add = trade_good_wealth_change
	add = urban_wealth_change
	add = wealth_decay_change
	subtract = capital_wealth_extraction
	subtract = province_infrastrucure_investment
	if = {
		limit = {has_variable = per_capita_wealth}
		add = neighbor_change
	}
	min = {
		value = var:province_wealth
		multiply = -1
	}
}

province_infrastructure_change = {
	value = infrastructure_decay_change
	add = province_infrastrucure_investment
}

troop_maintenance = {
	value = PREV.var:troop_count
	multiply = 100
	divide = max_manpower
	multiply = 0.25
}
looting_infrastructure_damage = 0.05
province_loot_amount = 0.75
civil_war_loot_amount = 0.333
general_wealth_gain = 0.10
state_wealth_gain = 0.25
provinces_wealth_gain = {
	if = {
		limit = {owner = {has_law = city_state_law}}
		value = 0.0
	}
	else_if = {
		limit = {owner = {has_law = league_law}}
		value = 0.20
	}
	else_if = {
		limit = {owner = {has_law = nation_law}}
		value = 0.30
	}
	else_if = {
		limit = {owner = {has_law = empire_law}}
		value = 0.40
	}
	else = {
		value = 0.25
	}
}
capital_wealth_gain = {
	if = {
		limit = {owner = {has_law = city_state_law}}
		value = 0.4
	}
	else_if = {
		limit = {owner = {has_law = league_law}}
		value = 0.20
	}
	else_if = {
		limit = {owner = {has_law = nation_law}}
		value = 0.10
	}
	else_if = {
		limit = {owner = {has_law = empire_law}}
		value = 0.0
	}
	else = {
		value = 0.15
	}
}

investment_amount = {
	value = num_of_foundry_building
	multiply = 450
}